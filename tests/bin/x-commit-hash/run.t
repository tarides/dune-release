We need a basic opam project skeleton

  $ cat > CHANGES.md << EOF
  > ## 0.1.0
  > 
  > - Some other feature
  > 
  > ## 0.0.0
  > 
  > - Some feature
  > EOF
  $ cat > whatever.opam << EOF
  > opam-version: "2.0"
  > homepage: "https://github.com/foo/whatever"
  > dev-repo: "git+https://github.com/foo/whatever.git"
  > doc: "https://foo.github.io/whatever/"
  > synopsis: "whatever"
  > EOF
  $ touch README
  $ touch LICENSE
  $ cat > dune-project << EOF
  > (lang dune 2.4)
  > (name whatever)
  > EOF

We need to set up a git project for dune-release to work properly

  $ cat > .gitignore << EOF
  > _build
  > /dune
  > run.t
  > EOF
  $ git init > /dev/null 2>&1
  $ git config user.name "dune-release-test"
  $ git config user.email "pseudo@pseudo.invalid"
  $ git config remote.origin.url git+https://github.com/foo/whatever.git
  $ git add CHANGES.md whatever.opam dune-project README LICENSE .gitignore
  $ git commit -m "Initial commit" > /dev/null
  $ dune-release tag -y > /dev/null

We make a dry-run release

  $ dune-release distrib --dry-run > /dev/null

We create an opam package:

  $ dune-release opam pkg
  [-] Creating opam package description for whatever
  dune-release: [WARNING] Could not find _build/asset-0.1.0.url.
  dune-release: [WARNING] using https://github.com/foo/whatever/releases/download/0.1.0/whatever-0.1.0.tbz for as url.src. Note that it might differ from the one generated by Github
  [+] Wrote opam package description _build/whatever.0.1.0/opam

We make sure that `x-commit-hash` has been set in the OPAM file:

  $ cat _build/whatever.0.1.0/opam | grep -o ^x-commit-hash:
  x-commit-hash:
